version: 2.1
jobs:
  buildApi:
    docker:
      - image: fpco/stack-build:lts
    steps:
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          name: Restore Cached Dependencies
          keys:
            - coach-v1-{{ checksum "stack.yaml" }}-{{ checksum "api/package.yaml" }}
            - coach-v1-{{ checksum "stack.yaml" }}
      - run:
          name: Resolve/Update Dependencies
          command: pushd api; stack --no-terminal setup; popd;
      - run:
          name: Run tests
          command: pushd api; stack --no-terminal test; popd;
      - run:
          name: Install executable
          command: pushd api; stack --no-terminal install; popd;
      - save_cache:
          name: Cache Dependencies
          key: coach-v1-{{ checksum "stack.yaml" }}-{{ checksum "api/package.yaml" }}
          paths:
            - "/root/.stack"
            - ".stack-work"
  buildFrontend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
#      - restore_cache:
#        name: Restore Yarn Package Cache
#        key: yarn-packages-{{ checksum "fontend/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: cd frontend; yarn install --frozen-lockfile
      - run:
          name: Typecheck and Test
          command: cd frontend; yarn test:ci
#      - save_cache:
#          name: Save Yarn Package Cache
#          key: yarn-packages-{{ checksum "frontend/yarn.lock" }}
#          paths:
#            - ~/.cache/yarn
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - buildApi
      - buildFrontend
      - deploy:
          requires:
            - buildApi
            - buildFrontend
          filters:
            branches:
              only: master